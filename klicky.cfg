#####################################################################
# 	Probe
#####################################################################
[probe]
pin: PG11
x_offset: 0
y_offset: 19.75
z_offset: 6.5 #2.5
speed: 3.5
lift_speed: 20.0
samples: 5
samples_result: median
sample_retract_dist: 0.8
samples_tolerance: 0.006 #0.007
samples_tolerance_retries: 7


#####################################################################
# 	Z Calibration
#####################################################################
[z_calibration]
#switch_offset: 0.450 ; Original
switch_offset: 0.410  # using Higher number = closer to bed
max_deviation: 4.6
speed: 32000             # the moving speed in x and y
samples: 5
probing_first_fast: true
probing_speed: 10
probing_second_speed: 3.5
probe_nozzle_x: 181.5   # coordinates for clicking the nozzle on the z-endstop
probe_nozzle_y: 255
probe_switch_x: 176   # coordinates for clicking the probe's switch on the z-endstop
probe_switch_y: 235

#####################################################################
#  Macros
#####################################################################
## customize QUAD GANTRY LEVEL gcode 
[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: BASE_QUAD_GANTRY_LEVEL
gcode:
    STATUS_LEVELING
    M117 QGL..
    _CG28 RESET_SETTINGS=false
    SECURE_ATTACH_PROBE
    BASE_QUAD_GANTRY_LEVEL
    # ability to disable z calibration - it's done later in PRINT_START
    {% if params.CALIBRATE|default('true') == 'true' %}
      CALIBRATE_Z RESET_SETTINGS=false
    {% else %}
      SECURE_DOCK_PROBE
    {% endif %}
    # reset accel current
    M117 QGL done.
    PARKCENTER
    STATUS_READY

## customize CALIBRATE Z gcode 
[gcode_macro CALIBRATE_Z]
rename_existing: BASE_CALIBRATE_Z
gcode:
    STATUS_CALIBRATING_Z
    _CG28 RESET_SETTINGS=false
    M117 Z-Calibration..
    SECURE_ATTACH_PROBE
    BASE_CALIBRATE_Z
    SECURE_DOCK_PROBE    
    M117 Z-Calibration done.
    STATUS_READY

# attaching the probe if not already attached
[gcode_macro SECURE_ATTACH_PROBE]
gcode:
    M117 Attaching Probe...
    QUERY_PROBE
    _PROBE_ACTION action=attach
    _CHECK_PROBE action=check_attach
    M117 Probe attached.

# docking the probe if not already docked
[gcode_macro SECURE_DOCK_PROBE]
gcode:
    M117 Docking Probe...
    QUERY_PROBE
    _PROBE_ACTION action=dock
    _CHECK_PROBE action=check_dock
    STATUS_READY
    M117 Probe docked.


[gcode_macro _CHECK_PROBE]
variable_probe_state: 0
gcode:
    QUERY_PROBE
    _PROBE_ACTION action={ ACTION }

[gcode_macro _PROBE_ACTION]
gcode:
  {% set state = not printer.probe.last_query %}
  SET_GCODE_VARIABLE MACRO=_CHECK_PROBE VARIABLE=probe_state VALUE={ state }

  # attach/dock probe
  {% if not state and params.ACTION == 'attach' %}
    _ATTACH_PROBE
  {% endif %}
  {% if state and params.ACTION == 'dock' %}
    _DOCK_PROBE
  {% endif %}

  # check if probe fails to attach/detach
  {% if state and params.ACTION == 'check_dock' %}
    { action_raise_error("Probe dock failed!") }
  {% endif %}
  {% if not state and params.ACTION == 'check_attach' %}
    { action_raise_error("Probe attach failed!") }
  {% endif %}

# this attaching from above is more silent but would
# be dangerous if the probe is already attached!
#[gcode_macro _ATTACH_PROBE]
#gcode:
#    SAVE_GCODE_STATE NAME=_ATTACH_PROBE
#    SET_GCODE_OFFSET Z=0.0         ; reset offset - will be restored
#    G90                            ; absolute positioning
#    G0 X252.5 Y300 Z10 F12000      ; move to mag-probe
#    G0 Z0.0 F540                   ; move down to mag-probe
#    G0 Y285 F6000                  ; move out
#    G0 Z10 F540                    ; move up
#    RESTORE_GCODE_STATE NAME=_ATTACH_PROBE

[gcode_macro _ATTACH_PROBE]
gcode:
    SAVE_GCODE_STATE NAME=_ATTACH_PROBE
    SET_GCODE_OFFSET Z=0.0         ; reset offset - will be restored
    G90                            ; absolute positioning
    G0 X0 Y230 F30000             ; move to mag-probe
    G0 Y254 F30000                  ; move in
    G0 Y230 F10000                  ; move out
    RESTORE_GCODE_STATE NAME=_ATTACH_PROBE

[gcode_macro _DOCK_PROBE]
gcode:
    SAVE_GCODE_STATE NAME=_DOCK_PROBE
    SET_GCODE_OFFSET Z=0.0         ; reset offset - will be restored
    G91                            ; relative positioning
    G0 Z8 F3000                    ; lift probe a bit
    G90                            ; absolute positioning
    G0 X0 Y230 F30000             ; move to mag-probe
    G0 Y254 F30000                  ; move in
    G0 X85 F30000                   ; move right
    RESTORE_GCODE_STATE NAME=_DOCK_PROBE

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: _BED_MESH_CALIBRATE
gcode:
    M117 Bed Mesh Calibration...
    STATUS_MESHING
    SECURE_ATTACH_PROBE
    _BED_MESH_CALIBRATE {% for p in params 
           %}{'%s=%s' % (p, params[p])}{% 
          endfor %}
    M117 Bed Mesh Calibration done.
    SECURE_DOCK_PROBE

[gcode_macro PROBE_ACCURACY]
rename_existing: _PROBE_ACCURACY
gcode:
    #store current nozzle location
    SAVE_GCODE_STATE NAME=original_nozzle_location
    STATUS_MESHING
    SECURE_ATTACH_PROBE
    PARKCENTER Z={printer.configfile.settings.quad_gantry_level.horizontal_move_z}
    _PROBE_ACCURACY {% for p in params 
            %}{'%s=%s' % (p, params[p])}{% 
           endfor %}
    SECURE_DOCK_PROBE
    #restore current nozzle location
    RESTORE_GCODE_STATE NAME=original_nozzle_location MOVE=1
    STATUS_READY


[gcode_macro PARKCENTER]
gcode:
    {% set Z = params.Z|default(30)|float %}
    SAVE_GCODE_STATE NAME=PARKCENTER_state
    _CG28                          ; Home if not already homed
    G90                            ; absolute positioning
    G0 X125 Y125 Z{Z} F30000       ; move to center
    M117 Parked on Center Z={Z}
    RESTORE_GCODE_STATE NAME=PARKCENTER_state


    ## conditional home
[gcode_macro _CG28]
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28 RESET_SETTINGS={ params.RESET_SETTINGS|default('true') }
  {% endif %}